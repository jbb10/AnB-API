Protocol: Keyserver

# A simple protocol that ...
Types:
Agents   : {a,s,i}
Dishonest: {i}
H        : {a}
S        : {s}
D        : {i}
U        : {a,i}
Sts      : {valid,revoked}
PK, NPK  : value

Sets:
keyring(U), db(S,U,Sts)

Facts:
#empty

Subprotocols:
#Here an honest user creates a public key
#and submits it to the server
H: create(PK)
H: insert(PK,keyring(H))
H->S: PK
S: insert(PK,db(S,H,valid))
---
#Here a dishonest user creates a public key
#and submits it to the server
D: create(PK)
D: insert(PK,keyring(D))
D->S:PK
S: insert(PK,db(S,D,valid))
S->D: inv(PK)
---
U: select PK from keyring(U)
U: delete(PK,keyring(U))
U: create(NPK)
U: insert(NPK,keyring(U))
U->S: {U,NPK}inv(PK)
S: if NPK notin db(S,_,_)
S: select PK from db(S,U,valid)
S: delete(PK,db(S,U,valid))
S: insert(NPK,db(S,U,valid))
S: insert(PK,db(S,U,revoked))

Attacks:
->referee: inv(PK)
referee: if PK in db(S,H,valid)
